name: Deploy
on:
  push:
    branches:
      - main
      - prod

jobs:
  test-lint:
    name: "Test and Lint"
    uses: ./.github/workflows/test-and-lint.yml
    secrets:
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  deploy:
    name: "Deploy"
    runs-on: ubuntu-22.04
    needs: test-lint
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'prod' || 'staging' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Print all environment variables
        run: printenv | sort
      - name: Push to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com
          docker build --compress -t ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA .
          docker push ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA
          docker build --compress -t ${{ vars.ECR_REPO_PROXY}}:$GITHUB_SHA proxy/
          docker push ${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
          TF_VAR_django_secret_key: ${{ secrets.TF_VAR_DJANGO_SECRET_KEY }}
          TF_VAR_ecr_app_image: ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA
          TF_VAR_ecr_proxy_image: ${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA
        run: |
          cd infra/
          docker compose run --rm terraform -chdir=deploy/ init
          docker compose run --rm terraform -chdir=deploy/ workspace select -or-create $ENVIRONMENT
          docker compose run --rm terraform -chdir=deploy/ apply -auto-approve
          workspace=$(docker compose run --rm terraform -chdir=deploy/ workspace show)
          echo "Terraform applied in the $workspace workspace."
